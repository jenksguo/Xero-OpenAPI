openapi: 3.0.0
info:
  version: "1.0.0"
  title: Xero Assets API
  description: This is the Xero Assets API 
  termsOfService: "https://developer.xero.com/xero-developer-platform-terms-conditions/"
  contact:
    name: "Xero Platform Team"
    email: "api@xero.com"
    url: "https://developer.xero.com"
  license:
    name: MIT 
    url: 'https://github.com/XeroAPI/Xero-OpenAPI/blob/master/LICENSE'
servers:
  - description: Xero API servers
    url: https://api.xero.com/assets.xro/1.0/
paths:
  /Assets:
    parameters:
      - $ref: '#/components/parameters/requiredHeader'
    get:
      security:
        - OAuth2: [assets.read]
      tags:
        - Asset
      summary: searches fixed asset 
      operationId: getAssets
      description: By passing in the appropriate options, you can search for
        available fixed asset in the system
      parameters: 
        - name: status
          in: query
          description: Required when retrieving a collection of assets. See Asset Status Codes
          schema: 
            type: string
            enum: 
            - Draft
            - Registered
            - Disposed
            example: Draft
          required: true
        - name: page
          in: query
          description: Results are paged. This specifies which page of the results to return. The default page is 1.
          schema: 
            type: integer
            example: 1
        - name: pageSize
          in: query
          description: The number of records returned per page. By default the number of records returned is 10.
          schema: 
            type: integer
            example: 5
        - name: orderBy
          in: query
          description: Requests can be ordered by AssetType, AssetName, AssetNumber, PurchaseDate and PurchasePrice. If the asset status is DISPOSED it also allows DisposalDate and DisposalPrice.
          schema: 
            type: string
            enum: 
            - AssetType
            - AssetName
            - AssetNumber
            - PurchaseDate
            - PurchasePrice
            - DisposalDate
            - DisposalPrice
            example: AssetName
        - name: sortDirection
          in: query
          description: ASC or DESC
          schema: 
            type: string
            enum: 
            - asc
            - desc
            example: ASC
        - name: filterBy
          in: query
          description: A string that can be used to filter the list to only return assets containing the text. Checks it against the AssetName, AssetNumber, Description and AssetTypeName fields.
          schema: 
            type: string
            example: Draft
            enum:
            - AssetName
            - AssetNumber
            - Description
            - AssetTypeName
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Assets'
        '400':
          description: bad input parameter
    post:
      security:
        - OAuth2: [assets]
      tags:
        - Asset
      summary: adds a fixed asset
      operationId: createAsset
      description: Adds an asset to the system
      responses:
        '200':
          description: return single object - create new asset
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
        '400':
          description: 'invalid input, object invalid'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Asset'
        description: Fixed asset to add
  /Assets/{id}:
    parameters:
      - $ref: '#/components/parameters/requiredHeader'
    get:
      security:
        - OAuth2: [assets.read]
      tags:
        - Asset
      summary: retrieves fixed asset by id 
      operationId: getAssetById
      description: |
        By passing in the appropriate asset id, you can search for
        a specific fixed asset in the system
      parameters: 
        - name: id
          in: path
          required: true
          description: fixed asset id for single object
          schema: 
            type: string
            format: uuid
            example: "4f7bcdcb-5ec1-4258-9558-19f662fccdfe"
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Asset'
        '400':
          description: bad input parameter
  /AssetTypes:
    parameters:
      - $ref: '#/components/parameters/requiredHeader'
    get:
      security:
        - OAuth2: [assets.read]
      tags:
        - Asset
      summary: searches fixed asset types
      operationId: getAssetTypes
      description: By passing in the appropriate options, you can search for
        available fixed asset types in the system
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AssetType'
        '400':
          description: bad input parameter
    post:
      security:
        - OAuth2: [assets]
      tags:
        - Asset
      summary: adds a fixed asset type
      operationId: createAssetType
      description: Adds an fixed asset type to the system
      responses:
        '200':
          description: results single object -  created fixed type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetType'
        '400':
          description: 'invalid input, object invalid'
        '409':
          description: a type already exists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AssetType'
        description: Asset type to add
  /Settings:
    parameters:
      - $ref: '#/components/parameters/requiredHeader'
    get:
      security:
        - OAuth2: [assets.read]
      tags:
        - Asset
      summary: searches fixed asset settings
      operationId: getAssetSettings
      description: By passing in the appropriate options, you can search for
        available fixed asset types in the system
      responses:
        '200':
          description: search results matching criteria
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Setting'
        '400':
          description: bad input parameter
components:
  securitySchemes:
    OAuth2:
      type: oauth2
      description: For more information
      flows: 
        authorizationCode:
          authorizationUrl: 'https://login.xero.com/identity/connect/authorize'
          tokenUrl: 'https://identity.xero.com/connect/token'
          scopes:
            email: Grant read-only access to your email
            openid: Grant read-only access to your open id
            profile: your profile information
            accounting.transactions: Grant read-write access to bank transactions, credit notes, invoices, repeating invoices
            accounting.transactions.read: Grant read-only access to invoices
            accounting.reports.read: Grant read-only access to accounting reports
            accounting.journals.read: Grant read-only access to journals
            accounting.settings: Grant read-write access to organisation and account settings
            accounting.settings.read: Grant read-only access to organisation and account settings
            accounting.contacts: Grant read-write access to contacts and contact groups
            accounting.contacts.read: Grant read-only access to contacts and contact groups
            accounting.attachments: Grant read-write access to attachments
            accounting.attachments.read: Grant read-only access to attachments
            assets assets.read: Grant read-only access to fixed assets
            bankfeeds: Grant read-write access to bankfeeds 
            files: Grant read-write access to files and folders
            files.read: Grant read-only access to files and folders
            payroll: Grant read-write access to payroll
            payroll.read: Grant read-only access to payroll
            payroll.employees: Grant read-write access to payroll employees
            payroll.employees.read: Grant read-only access to payroll employees
            payroll.leaveapplications: Grant read-write access to payroll leaveapplications
            payroll.leaveapplications.read: Grant read-only access to payroll leaveapplications
            payroll.payitems: Grant read-write access to payroll payitems
            payroll.payitems.read: Grant read-only access to payroll payitems
            payroll.payrollcalendars: Grant read-write access to payroll calendars
            payroll.payrollcalendars.read: Grant read-only access to payroll calendars
            payroll.payruns: Grant read-write access to payroll payruns
            payroll.payruns.read: Grant read-only access to payroll payruns
            payroll.payslip: Grant read-write access to payroll payslips
            payroll.payslip.read: Grant read-only access to payroll payslips
            payroll.settings.read: Grant read-only access to payroll settings
            payroll.superfunds: Grant read-write access to payroll superfunds
            payroll.superfunds.read: Grant read-only access to payroll superfunds
            payroll.superfundproducts.read: Grant read-only access to payroll superfundproducts
            payroll.timesheets: Grant read-write access to payroll timesheets
            payroll.timesheets.read: Grant read-only access to payroll timesheets
            paymentservices: Grant read-write access to payment services
            projects: Grant read-write access to projects
            projects.read: Grant read-only access to projects
  parameters:
    requiredHeader: 
      in: header
      name: Xero-Tenant-Id
      description: Xero identifier for Tenant
      schema:
        type: string
      required: true 
  schemas:
    Assets:
      type: object
      properties:
        pagination:
          $ref: '#/components/schemas/Pagination'
        items:
          type: array
          items:
            $ref: '#/components/schemas/Asset'
    Pagination:
      properties:
        page:
          type: integer
          example: 1
        pageSize:
          type: integer
          example: 10
        pageCount:
          type: integer
          example: 1
        itemCount:
          type: integer
          example: 2
    Asset:
      type: object
      required:
        - assetId
        - assetName
        - bookDepreciationSetting
      properties:
        assetId:
          type: string
          format: uuid
          description: "The Xero-generated Id for the asset"
          example: "3b5b3a38-5649-495f-87a1-14a4e5918634"
        assetName:
          type: string
          description: "The name of the asset"
          example: "Awesome Truck 3"
        assetNumber:
          type: string
          description: "Must be unique."
          example: "FA-0013"
        purchaseDate:
          type: string
          format: date
          description: "The date the asset was purchased YYYY-MM-DD"
          example: "2015-07-01T00:00:00"
        purchasePrice:
          type: integer
          description: "The purchase price of the asset"
          example: "1000"
        disposalPrice:
          type: integer
          description: "The price the asset was disposed at"
          example: 0
        assetStatus:
          type: string
          description: "See Asset Status Codes."
          example: "Draft"
          enum:
          - Draft  
          - Registered  
          - Disposed
        warrantyExpiryDate:
          type: string
          description: "The date the asset’s warranty expires (if needed) YYYY-MM-DD"
          example: "ca4c6b39-4f4f-43e8-98da-5e1f350a6694"
        serialNumber:
          type: string
          description: "The asset's serial number"
          example: "ca4c6b39-4f4f-43e8-98da-5e1f350a6694"
        bookDepreciationSetting:
          $ref: '#/components/schemas/BookDepreciationSetting'
        bookDepreciationDetail:
          $ref: '#/components/schemas/BookDepreciationDetail'
        canRollBack:
          type: boolean
          description: "Boolean to indicate whether depreciation can be rolled back for this asset individually. This is true if it doesn't have 'legacy' journal entries and if there is no lock period that would prevent this asset from rolling back."
          example: true
        AccountingBookValue:
          type: integer
          description: "The accounting value of the asset"
          example: 0
    AssetType:
      type: object
      required:
        - assetTypeId
        - assetTypeName
        - bookDepreciationSetting
      properties:
        assetTypeId:
          type: string
          format: uuid
          example: "5da209c5-5e19-4a43-b925-71b776c49ced"
          description: "Xero generated unique identifier for asset types"
        assetTypeName:
          type: string
          example: "Computer Equipment"
          description: "The name of the asset type"
        fixedAssetAccountId:
          type: string
          format: uuid
          example: "24e260f1-bfc4-4766-ad7f-8a8ce01de879"
          description: "The asset account for fixed assets of this type"
        depreciationExpenseAccountId:
          type: string
          format: uuid
          example: "b23fc79b-d66b-44b0-a240-e138e086fcbc"
          description: "The expense account for the depreciation of fixed assets of this type"
        accumulatedDepreciationAccountId:
          type: string
          format: uuid
          example: "ca4c6b39-4f4f-43e8-98da-5e1f350a6694"
          description: "The account for accumulated depreciation of fixed assets of this type"
        bookDepreciationSetting:
          $ref: '#/components/schemas/BookDepreciationSetting'
        locks:
          type: integer
          example: 33
          description: "All asset types that have accumulated depreciation for any assets that use them are deemed ‘locked’ and cannot be removed."
    BookDepreciationSetting:
      required:
        - name
      properties:
        depreciationMethod:
          type: string
          enum: 
          - NoDepreciation
          - StraightLine
          - DiminishingValue100
          - DiminishingValue150
          - DiminishingValue200
          - FullDepreciation
          example: "StraightLine"
          description: "The method of depreciation applied to this asset. See Depreciation Methods"
        averagingMethod:
          type: string
          enum: 
          - FullMonth
          - ActualDays
          example: "ActualDays"
          description: "The method of averaging applied to this asset. See Averaging Methods"
        depreciationRate:
          type: number
          format: float
          example: 0.05
          description: "The rate of depreciation (e.g. 0.05)"
        effectiveLifeYears:
          type: integer
          example: 5
          description: "Effective life of the asset in years (e.g. 5)"
        depreciationCalculationMethod:
          type: string
          enum: 
          - Rate
          - Life
          - None
          example: "None"
          description: "See Depreciation Calculation Methods"
    BookDepreciationDetail:
      required:
        - name
      properties:
        currentCapitalGain:
          type: integer
          example: 0
          description: "When an asset is disposed, this will be the sell price minus the purchase price if a profit was made."
        currentGainLoss:
          type: integer
          example: 0
          description: "When an asset is disposed, this will be the lowest one of sell price or purchase price, minus the current book value."
        depreciationStartDate:
          type: string
          format: date
          example: "2015-07-01T00:00:00"
          description: "YYYY-MM-DD"
        costLimit:
          type: integer
          example: 100000
          description: "The value of the asset you want to depreciate, if this is less than the cost of the asset."
        residualValue:
          type: integer
          example: 10000
          description: "The value of the asset remaining when you've fully depreciated it."
        priorAccumDepreciationAmount:
          type: integer
          example: 0
          description: "All depreciation prior to the current financial year."
        currentAccumDepreciationAmount:
          type: integer
          example: 0
          description: "All depreciation occurring in the current financial year."
    Setting:
      required:
       - name
      properties:
        assetNumberPrefix:
          type: string
          example: "FA-"
          description: "The prefix used for fixed asset numbers (“FA-” by default)"
        assetNumberSequence:
          type: string
          example: "0022"
          description: "The next available sequence number"
        assetStartDate:
          type: string
          format: date
          example: "2015-07-31T00:00:00"
          description: "The date depreciation calculations started on registered fixed assets in Xero"
        lastDepreciationDate:
          type: string
          format: date
          example: "2015-07-01T00:00:00"
          description: "The last depreciation date"
        defaultGainOnDisposalAccountId:
          type: string
          format: uuid
          example: "346ddb97-739a-4274-b43b-66aa3218d17c"
          description: "Default account that gains are posted to"
        defaultLossOnDisposalAccountId:
          type: string
          format: uuid
          example: "1b798541-24e2-4855-9309-c023a0b576f3"
          description: "Default account that losses are posted to"
        defaultCapitalGainOnDisposalAccountId:
          type: string
          format: uuid
          example: "6d6a0bdb-e118-45d8-a023-2ad617ec1cb7"
          description: "Default account that capital gains are posted to"
        optInForTax:
          type: boolean
          description: "opt in for tax calculation"
          example: false
      type: object